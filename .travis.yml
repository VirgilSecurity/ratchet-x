language: swift
osx_image: xcode10

env:
  global:
    - LC_CTYPE=en_US.UTF-8
    - PROJECT=VirgilSDKRatchet.xcodeproj
    - IOS_FRAMEWORK_SCHEME="VirgilSDKRatchet iOS"
    - IOS_TEST_SCHEME="RatchetTestApp iOS"
    - IOS_SDK=iphonesimulator12.0
    - MACOS_SDK=macosx10.14
    - TVOS_SDK=appletvsimulator12.0
    - WATCHOS_SDK=watchsimulator5.0
    - FRAMEWORK_NAME=VirgilSDKRatchet

  matrix:
    - DESTINATION="OS=12.0,name=iPhone SE"                     ENABLE_BUILD="YES"    SCHEME="$IOS_FRAMEWORK_SCHEME"        SDK="$IOS_SDK"        TWO_STEP_BUILD_ENABLED="YES"    CARTHAGE_PLATFORM_NAME="iOS"        RUN_TESTS="YES"    ADDITIONAL_TESTS_SCHEME="$IOS_TEST_SCHEME"     PUBLISH_DOCS="YES"     PUBLISH_CARTHAGE="YES"     POD_LIB_LINT="NO"    SWIFT_LINT="YES"

before_install:
  - set -e
  - set -o pipefail
  - brew update
  - brew outdated carthage || brew upgrade carthage
  - xcodebuild -version
  - xcodebuild -showsdks

script:
  - openssl aes-256-cbc -K $encrypted_cda9e01aaac5_key -iv $encrypted_cda9e01aaac5_iv -in config.tar.enc -out config.tar -d
  - tar xvf config.tar

  - |
    if [ -n "$TRAVIS_TAG" ]; then
      cp TestConfig_prod.plist Tests/Data/TestConfig.plist
    else
      cp TestConfig_stg.plist Tests/Data/TestConfig.plist
    fi

  - carthage version
  - carthage bootstrap --no-build

  - |
    if [ $SWIFT_LINT == "YES" ]; then
      brew outdated swiftlint || brew upgrade swiftlint
      swiftlint
    fi
  
  - |
    if [ $ENABLE_BUILD == "YES" ]; then
      if [ $TWO_STEP_BUILD_ENABLED == "YES" ]; then
        # Build Framework
        xcodebuild -verbose -project "$PROJECT" -scheme "$SCHEME" -sdk "$SDK" -destination "$DESTINATION" -configuration Release clean build | xcpretty;
        # Build Framework in Release and Run Tests if specified
        if [ $RUN_TESTS == "YES" ]; then
          if [ -n "$ADDITIONAL_TESTS_SCHEME" ]; then
            xcodebuild -verbose -project "$PROJECT" -scheme "$ADDITIONAL_TESTS_SCHEME" -sdk "$SDK" -destination "$DESTINATION" -configuration Debug clean test;
          else
            xcodebuild -verbose -project "$PROJECT" -scheme "$SCHEME" -sdk "$SDK" -destination "$DESTINATION" -configuration Debug test;
          fi
        fi
      else
        # Build Framework
        xcodebuild -verbose -project "$PROJECT" -scheme "$SCHEME" -sdk "$SDK" -destination "$DESTINATION" -configuration Release clean build | xcpretty;
      fi
    fi

  # Build with carthage
  - if [ $PUBLISH_CARTHAGE == "YES" ]; then
      carthage build --no-skip-current --no-use-binaries;
    fi
  
  # Check pod lib
  - if [ $POD_LIB_LINT == "YES" ]; then
      gem install cocoapods --pre;
      pod repo update;
      pod lib lint;
    fi

before_deploy:
  - carthage archive

after_success:
  # Generate and publish docs
  - if [ -n "${TRAVIS_TAG}" ] && [ $PUBLISH_DOCS == "YES" ]; then
      ./CI/publish-docs.sh;
    fi
